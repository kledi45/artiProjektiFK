// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sneaker_Shop_Management.Data;

namespace Sneaker_Shop_Management.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221030193327_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Sneaker_Shop_Management.Models.Bid", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdSell")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("IdSell");

                    b.ToTable("Bid");
                });

            modelBuilder.Entity("Sneaker_Shop_Management.Models.DeliveryType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdShoes")
                        .HasColumnType("int");

                    b.Property<int>("Type1")
                        .HasColumnType("int");

                    b.Property<int>("Type2")
                        .HasColumnType("int");

                    b.Property<int>("Type3")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("IdShoes");

                    b.ToTable("DeliveryType");
                });

            modelBuilder.Entity("Sneaker_Shop_Management.Models.NewsLetter", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdUser")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("IdUser");

                    b.ToTable("NewsLetter");
                });

            modelBuilder.Entity("Sneaker_Shop_Management.Models.Sell", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdShoes")
                        .HasColumnType("int");

                    b.Property<int?>("IdUser")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("IdShoes");

                    b.HasIndex("IdUser");

                    b.ToTable("Sell");
                });

            modelBuilder.Entity("Sneaker_Shop_Management.Models.Shoes", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BuyPrice")
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Size")
                        .HasColumnType("float");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UserId");

                    b.ToTable("Shoes");
                });

            modelBuilder.Entity("Sneaker_Shop_Management.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Sneaker_Shop_Management.Models.Bid", b =>
                {
                    b.HasOne("Sneaker_Shop_Management.Models.Sell", "Sell")
                        .WithMany()
                        .HasForeignKey("IdSell");
                });

            modelBuilder.Entity("Sneaker_Shop_Management.Models.DeliveryType", b =>
                {
                    b.HasOne("Sneaker_Shop_Management.Models.Shoes", "Shoes")
                        .WithMany()
                        .HasForeignKey("IdShoes");
                });

            modelBuilder.Entity("Sneaker_Shop_Management.Models.NewsLetter", b =>
                {
                    b.HasOne("Sneaker_Shop_Management.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("IdUser");
                });

            modelBuilder.Entity("Sneaker_Shop_Management.Models.Sell", b =>
                {
                    b.HasOne("Sneaker_Shop_Management.Models.Shoes", "Shoes")
                        .WithMany()
                        .HasForeignKey("IdShoes");

                    b.HasOne("Sneaker_Shop_Management.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("IdUser");
                });

            modelBuilder.Entity("Sneaker_Shop_Management.Models.Shoes", b =>
                {
                    b.HasOne("Sneaker_Shop_Management.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
